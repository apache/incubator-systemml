#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
# 
#   http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

# Generates random data to test linear logistic regression
#
# INPUT PARAMETERS:
# ----------------------------------------------------------------------------
# NAME       TYPE   DEFAULT  MEANING
# ----------------------------------------------------------------------------
# nr         Int     ---     Number of records
# nf         Int     ---     Number of features
# maxfeatval Int     ---     Maximum feature value (absolute value)
# maxweight  Int     ---     Maximum weight (absolute value)
# addnoise   Int     ---     Add Noise. if 0 then no noise is added, to add noise set this to 1
# icpt       Int     ---     Add Intercept. if 0 disables intercept
# sparse     Double  ---     Controls sparsity in the generated data
# translabel Int     ---     Transform labels. if 0 then -1/1; otherwise 1/2
# weight     Int     ---     Location to store generated weights
# X          String  ---     Location to store generated data
# Y          String  ---     Location to store generated labels
# fmt        String  ---     Output format
# ----------------------------------------------------------------------------
#
# Example:
# hadoop jar SystemML.jar -f genRandData4LogisticRegression.dml -nvargs nr=100000 nf=100
# maxfeatval=10 maxweight=5 addnoise=1 icpt=0 sparse=0.01 translabel=1
# weight=5 Y=Y.mtx X=X.mtx fmt='csv'

numSamples = $nr
numFeatures = $nf
maxFeatureValue = $maxfeatval
maxWeight = $maxweight
addNoise = $addnoise
b = $icpt

X = Rand(rows=numSamples, cols=numFeatures, min=-1, max=1, pdf="uniform", seed=0, sparsity=$sparse)
X = X * maxFeatureValue 

w = Rand(rows=numFeatures, cols=1, min=-1, max=1, pdf="uniform", seed=0)
w = w * maxWeight

ot = X %*% w
if( b != 0) {
	b_mat = Rand(rows=1, cols=1, min=b, max=b, pdf="uniform")
	w =  rbind(w, t(b_mat))
	ot = ot + b
}

prob = 1 / (1 + exp(-ot))
if( addNoise == 1 ){
	r = Rand(rows=numSamples, cols=1, min=0, max=1, pdf="uniform", seed=0)
} 
else {
	print("this data generator generates the same dataset for both noise=0 and noise=1")
	r = Rand(rows=numSamples, cols=1, min=0, max=1, pdf="uniform", seed=0)
}

Y = 1 - 2 * (prob < r)
if( $translabel == 1 ) {
  Y = (Y+3)/2;
}

write(w, $weight, format=$fmt)
write(X, $X, format=$fmt)
write(Y, $Y, format=$fmt)
