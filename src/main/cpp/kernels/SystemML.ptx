//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21124049
// Cuda compilation tools, release 8.0, V8.0.44
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_20
.address_size 64

	// .globl	copyUpperToLowerTriangleDense
.func  (.param .b64 func_retval0) __internal_accurate_pow
(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
;
.extern .shared .align 8 .b8 sdata[];

.visible .entry copyUpperToLowerTriangleDense(
	.param .u64 copyUpperToLowerTriangleDense_param_0,
	.param .u32 copyUpperToLowerTriangleDense_param_1,
	.param .u32 copyUpperToLowerTriangleDense_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<13>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [copyUpperToLowerTriangleDense_param_0];
	ld.param.u32 	%r4, [copyUpperToLowerTriangleDense_param_1];
	ld.param.u32 	%r5, [copyUpperToLowerTriangleDense_param_2];
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r8, %tid.x;
	mad.lo.s32 	%r1, %r6, %r7, %r8;
	mov.u32 	%r9, %ntid.y;
	mov.u32 	%r10, %ctaid.y;
	mov.u32 	%r11, %tid.y;
	mad.lo.s32 	%r2, %r9, %r10, %r11;
	mad.lo.s32 	%r3, %r2, %r4, %r1;
	setp.gt.s32	%p1, %r2, %r1;
	setp.lt.s32	%p2, %r3, %r5;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB0_2;
	bra.uni 	BB0_1;

BB0_1:
	cvta.to.global.u64 	%rd2, %rd1;
	mad.lo.s32 	%r12, %r1, %r4, %r2;
	mul.wide.s32 	%rd3, %r12, 8;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f64 	%fd1, [%rd4];
	mul.wide.s32 	%rd5, %r3, 8;
	add.s64 	%rd6, %rd2, %rd5;
	st.global.f64 	[%rd6], %fd1;

BB0_2:
	ret;
}

	// .globl	dense_matrix_set
.visible .entry dense_matrix_set(
	.param .u64 dense_matrix_set_param_0,
	.param .f64 dense_matrix_set_param_1,
	.param .u32 dense_matrix_set_param_2,
	.param .u32 dense_matrix_set_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<13>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [dense_matrix_set_param_0];
	ld.param.f64 	%fd1, [dense_matrix_set_param_1];
	ld.param.u32 	%r2, [dense_matrix_set_param_2];
	ld.param.u32 	%r3, [dense_matrix_set_param_3];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r7, %r5, %r4, %r6;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r11, %r7, %r3, %r10;
	mad.lo.s32 	%r1, %r8, %r9, %r11;
	mul.lo.s32 	%r12, %r3, %r2;
	setp.ge.s32	%p1, %r1, %r12;
	@%p1 bra 	BB1_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 8;
	add.s64 	%rd4, %rd2, %rd3;
	st.global.f64 	[%rd4], %fd1;

BB1_2:
	ret;
}

	// .globl	dense_matrix_copy
.visible .entry dense_matrix_copy(
	.param .u64 dense_matrix_copy_param_0,
	.param .u64 dense_matrix_copy_param_1,
	.param .u32 dense_matrix_copy_param_2,
	.param .u32 dense_matrix_copy_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<12>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [dense_matrix_copy_param_0];
	ld.param.u64 	%rd2, [dense_matrix_copy_param_1];
	ld.param.u32 	%r2, [dense_matrix_copy_param_2];
	ld.param.u32 	%r3, [dense_matrix_copy_param_3];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r7, %r5, %r4, %r6;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mad.lo.s32 	%r1, %r7, %r3, %r11;
	setp.lt.s32	%p1, %r7, %r2;
	setp.lt.s32	%p2, %r11, %r3;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB2_2;
	bra.uni 	BB2_1;

BB2_1:
	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f64 	[%rd7], %fd1;

BB2_2:
	ret;
}

	// .globl	relu
.visible .entry relu(
	.param .u64 relu_param_0,
	.param .u64 relu_param_1,
	.param .u32 relu_param_2,
	.param .u32 relu_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<12>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [relu_param_0];
	ld.param.u64 	%rd2, [relu_param_1];
	ld.param.u32 	%r4, [relu_param_2];
	ld.param.u32 	%r3, [relu_param_3];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r2, %r8, %r9, %r10;
	setp.lt.s32	%p1, %r1, %r4;
	setp.lt.s32	%p2, %r2, %r3;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB3_2;
	bra.uni 	BB3_1;

BB3_1:
	cvta.to.global.u64 	%rd3, %rd1;
	mad.lo.s32 	%r11, %r1, %r3, %r2;
	mul.wide.s32 	%rd4, %r11, 8;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f64 	%fd1, [%rd5];
	mov.f64 	%fd2, 0d0000000000000000;
	max.f64 	%fd3, %fd2, %fd1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f64 	[%rd7], %fd3;

BB3_2:
	ret;
}

	// .globl	compareAndSet
.visible .entry compareAndSet(
	.param .u64 compareAndSet_param_0,
	.param .u64 compareAndSet_param_1,
	.param .u32 compareAndSet_param_2,
	.param .u32 compareAndSet_param_3,
	.param .f64 compareAndSet_param_4,
	.param .f64 compareAndSet_param_5,
	.param .f64 compareAndSet_param_6,
	.param .f64 compareAndSet_param_7,
	.param .f64 compareAndSet_param_8
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<12>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd2, [compareAndSet_param_0];
	ld.param.u64 	%rd3, [compareAndSet_param_1];
	ld.param.u32 	%r2, [compareAndSet_param_2];
	ld.param.u32 	%r3, [compareAndSet_param_3];
	ld.param.f64 	%fd2, [compareAndSet_param_4];
	ld.param.f64 	%fd3, [compareAndSet_param_5];
	ld.param.f64 	%fd4, [compareAndSet_param_6];
	ld.param.f64 	%fd5, [compareAndSet_param_7];
	ld.param.f64 	%fd6, [compareAndSet_param_8];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r7, %r5, %r4, %r6;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mad.lo.s32 	%r1, %r7, %r3, %r11;
	setp.lt.s32	%p1, %r7, %r2;
	setp.lt.s32	%p2, %r11, %r3;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB4_6;
	bra.uni 	BB4_1;

BB4_1:
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f64 	%fd1, [%rd6];
	sub.f64 	%fd7, %fd1, %fd2;
	abs.f64 	%fd8, %fd7;
	setp.lt.f64	%p4, %fd8, %fd3;
	cvta.to.global.u64 	%rd7, %rd3;
	add.s64 	%rd1, %rd7, %rd5;
	@%p4 bra 	BB4_5;
	bra.uni 	BB4_2;

BB4_5:
	st.global.f64 	[%rd1], %fd4;
	bra.uni 	BB4_6;

BB4_2:
	setp.lt.f64	%p5, %fd1, %fd2;
	@%p5 bra 	BB4_4;
	bra.uni 	BB4_3;

BB4_4:
	st.global.f64 	[%rd1], %fd5;
	bra.uni 	BB4_6;

BB4_3:
	st.global.f64 	[%rd1], %fd6;

BB4_6:
	ret;
}

	// .globl	binCellOp
.visible .entry binCellOp(
	.param .u64 binCellOp_param_0,
	.param .u64 binCellOp_param_1,
	.param .u64 binCellOp_param_2,
	.param .u32 binCellOp_param_3,
	.param .u32 binCellOp_param_4,
	.param .u32 binCellOp_param_5,
	.param .u32 binCellOp_param_6,
	.param .u32 binCellOp_param_7
)
{
	.reg .pred 	%p<50>;
	.reg .b32 	%r<51>;
	.reg .f64 	%fd<39>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd2, [binCellOp_param_0];
	ld.param.u64 	%rd3, [binCellOp_param_1];
	ld.param.u64 	%rd4, [binCellOp_param_2];
	ld.param.u32 	%r14, [binCellOp_param_3];
	ld.param.u32 	%r10, [binCellOp_param_4];
	ld.param.u32 	%r11, [binCellOp_param_5];
	ld.param.u32 	%r12, [binCellOp_param_6];
	ld.param.u32 	%r13, [binCellOp_param_7];
	mov.u32 	%r15, %ntid.x;
	mov.u32 	%r16, %ctaid.x;
	mov.u32 	%r17, %tid.x;
	mad.lo.s32 	%r1, %r15, %r16, %r17;
	mov.u32 	%r18, %ntid.y;
	mov.u32 	%r19, %ctaid.y;
	mov.u32 	%r20, %tid.y;
	mad.lo.s32 	%r2, %r18, %r19, %r20;
	setp.lt.s32	%p2, %r1, %r14;
	setp.lt.s32	%p3, %r2, %r10;
	and.pred  	%p4, %p2, %p3;
	@!%p4 bra 	BB5_53;
	bra.uni 	BB5_1;

BB5_1:
	mad.lo.s32 	%r3, %r1, %r10, %r2;
	setp.eq.s32	%p5, %r11, 1;
	mov.u32 	%r49, %r1;
	@%p5 bra 	BB5_5;

	setp.ne.s32	%p6, %r11, 2;
	mov.u32 	%r50, %r3;
	@%p6 bra 	BB5_4;

	mov.u32 	%r50, %r2;

BB5_4:
	mov.u32 	%r44, %r50;
	mov.u32 	%r4, %r44;
	mov.u32 	%r49, %r4;

BB5_5:
	mov.u32 	%r5, %r49;
	setp.eq.s32	%p7, %r12, 1;
	mov.u32 	%r47, %r1;
	@%p7 bra 	BB5_9;

	setp.ne.s32	%p8, %r12, 2;
	mov.u32 	%r48, %r3;
	@%p8 bra 	BB5_8;

	mov.u32 	%r48, %r2;

BB5_8:
	mov.u32 	%r47, %r48;

BB5_9:
	cvta.to.global.u64 	%rd5, %rd3;
	cvta.to.global.u64 	%rd6, %rd2;
	mul.wide.s32 	%rd7, %r5, 8;
	add.s64 	%rd8, %rd6, %rd7;
	ld.global.f64 	%fd1, [%rd8];
	mul.wide.s32 	%rd9, %r47, 8;
	add.s64 	%rd10, %rd5, %rd9;
	ld.global.f64 	%fd2, [%rd10];
	mov.f64 	%fd38, 0dC08F380000000000;
	setp.gt.s32	%p9, %r13, 5;
	@%p9 bra 	BB5_19;

	setp.gt.s32	%p19, %r13, 2;
	@%p19 bra 	BB5_15;

	setp.eq.s32	%p23, %r13, 0;
	@%p23 bra 	BB5_51;

	setp.eq.s32	%p24, %r13, 1;
	@%p24 bra 	BB5_50;
	bra.uni 	BB5_13;

BB5_50:
	sub.f64 	%fd38, %fd1, %fd2;
	bra.uni 	BB5_52;

BB5_19:
	setp.gt.s32	%p10, %r13, 8;
	@%p10 bra 	BB5_24;

	setp.eq.s32	%p16, %r13, 6;
	@%p16 bra 	BB5_34;

	setp.eq.s32	%p17, %r13, 7;
	@%p17 bra 	BB5_33;
	bra.uni 	BB5_22;

BB5_33:
	setp.gt.f64	%p29, %fd1, %fd2;
	selp.f64	%fd38, 0d3FF0000000000000, 0d0000000000000000, %p29;
	bra.uni 	BB5_52;

BB5_15:
	setp.eq.s32	%p20, %r13, 3;
	@%p20 bra 	BB5_49;

	setp.eq.s32	%p21, %r13, 4;
	@%p21 bra 	BB5_35;
	bra.uni 	BB5_17;

BB5_35:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd1;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r9}, %fd2;
	}
	bfe.u32 	%r21, %r9, 20, 11;
	add.s32 	%r22, %r21, -1012;
	mov.b64 	 %rd11, %fd2;
	shl.b64 	%rd1, %rd11, %r22;
	setp.eq.s64	%p32, %rd1, -9223372036854775808;
	abs.f64 	%fd11, %fd1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd11;
	.param .b64 param1;
	st.param.f64	[param1+0], %fd2;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd37, [retval0+0];
	
	//{
	}// Callseq End 0
	setp.lt.s32	%p33, %r8, 0;
	and.pred  	%p1, %p33, %p32;
	@!%p1 bra 	BB5_37;
	bra.uni 	BB5_36;

BB5_36:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd37;
	}
	xor.b32  	%r24, %r23, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r25, %temp}, %fd37;
	}
	mov.b64 	%fd37, {%r25, %r24};

BB5_37:
	mov.f64 	%fd36, %fd37;
	setp.eq.f64	%p34, %fd1, 0d0000000000000000;
	@%p34 bra 	BB5_40;
	bra.uni 	BB5_38;

BB5_40:
	selp.b32	%r26, %r8, 0, %p32;
	or.b32  	%r27, %r26, 2146435072;
	setp.lt.s32	%p38, %r9, 0;
	selp.b32	%r28, %r27, %r26, %p38;
	mov.u32 	%r29, 0;
	mov.b64 	%fd36, {%r29, %r28};
	bra.uni 	BB5_41;

BB5_24:
	setp.gt.s32	%p11, %r13, 10;
	@%p11 bra 	BB5_28;

	setp.eq.s32	%p14, %r13, 9;
	@%p14 bra 	BB5_32;
	bra.uni 	BB5_26;

BB5_32:
	setp.eq.f64	%p27, %fd1, %fd2;
	selp.f64	%fd38, 0d3FF0000000000000, 0d0000000000000000, %p27;
	bra.uni 	BB5_52;

BB5_28:
	setp.eq.s32	%p12, %r13, 11;
	@%p12 bra 	BB5_31;
	bra.uni 	BB5_29;

BB5_31:
	min.f64 	%fd38, %fd1, %fd2;
	bra.uni 	BB5_52;

BB5_51:
	add.f64 	%fd38, %fd1, %fd2;
	bra.uni 	BB5_52;

BB5_13:
	setp.eq.s32	%p25, %r13, 2;
	@%p25 bra 	BB5_14;
	bra.uni 	BB5_52;

BB5_14:
	mul.f64 	%fd38, %fd1, %fd2;
	bra.uni 	BB5_52;

BB5_34:
	setp.le.f64	%p30, %fd1, %fd2;
	selp.f64	%fd38, 0d3FF0000000000000, 0d0000000000000000, %p30;
	bra.uni 	BB5_52;

BB5_22:
	setp.eq.s32	%p18, %r13, 8;
	@%p18 bra 	BB5_23;
	bra.uni 	BB5_52;

BB5_23:
	setp.ge.f64	%p28, %fd1, %fd2;
	selp.f64	%fd38, 0d3FF0000000000000, 0d0000000000000000, %p28;
	bra.uni 	BB5_52;

BB5_49:
	div.rn.f64 	%fd38, %fd1, %fd2;
	bra.uni 	BB5_52;

BB5_17:
	setp.eq.s32	%p22, %r13, 5;
	@%p22 bra 	BB5_18;
	bra.uni 	BB5_52;

BB5_18:
	setp.lt.f64	%p31, %fd1, %fd2;
	selp.f64	%fd38, 0d3FF0000000000000, 0d0000000000000000, %p31;
	bra.uni 	BB5_52;

BB5_26:
	setp.eq.s32	%p15, %r13, 10;
	@%p15 bra 	BB5_27;
	bra.uni 	BB5_52;

BB5_27:
	setp.neu.f64	%p26, %fd1, %fd2;
	selp.f64	%fd38, 0d3FF0000000000000, 0d0000000000000000, %p26;
	bra.uni 	BB5_52;

BB5_29:
	setp.ne.s32	%p13, %r13, 12;
	@%p13 bra 	BB5_52;

	max.f64 	%fd38, %fd1, %fd2;
	bra.uni 	BB5_52;

BB5_38:
	setp.gt.s32	%p35, %r8, -1;
	@%p35 bra 	BB5_41;

	cvt.rzi.f64.f64	%fd30, %fd2;
	setp.neu.f64	%p36, %fd30, %fd2;
	selp.f64	%fd36, 0dFFF8000000000000, %fd36, %p36;

BB5_41:
	mov.f64 	%fd17, %fd36;
	add.f64 	%fd18, %fd1, %fd2;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r30}, %fd18;
	}
	and.b32  	%r31, %r30, 2146435072;
	setp.ne.s32	%p39, %r31, 2146435072;
	mov.f64 	%fd35, %fd17;
	@%p39 bra 	BB5_48;

	setp.gtu.f64	%p40, %fd11, 0d7FF0000000000000;
	mov.f64 	%fd35, %fd18;
	@%p40 bra 	BB5_48;

	abs.f64 	%fd19, %fd2;
	setp.gtu.f64	%p41, %fd19, 0d7FF0000000000000;
	mov.f64 	%fd34, %fd18;
	mov.f64 	%fd35, %fd34;
	@%p41 bra 	BB5_48;

	setp.eq.f64	%p42, %fd19, 0d7FF0000000000000;
	@%p42 bra 	BB5_47;
	bra.uni 	BB5_45;

BB5_47:
	setp.gt.f64	%p44, %fd11, 0d3FF0000000000000;
	selp.b32	%r37, 2146435072, 0, %p44;
	xor.b32  	%r38, %r37, 2146435072;
	setp.lt.s32	%p45, %r9, 0;
	selp.b32	%r39, %r38, %r37, %p45;
	setp.eq.f64	%p46, %fd1, 0dBFF0000000000000;
	selp.b32	%r40, 1072693248, %r39, %p46;
	mov.u32 	%r41, 0;
	mov.b64 	%fd35, {%r41, %r40};
	bra.uni 	BB5_48;

BB5_45:
	setp.neu.f64	%p43, %fd11, 0d7FF0000000000000;
	mov.f64 	%fd35, %fd17;
	@%p43 bra 	BB5_48;

	shr.s32 	%r32, %r9, 31;
	and.b32  	%r33, %r32, -2146435072;
	selp.b32	%r34, -1048576, 2146435072, %p1;
	add.s32 	%r35, %r34, %r33;
	mov.u32 	%r36, 0;
	mov.b64 	%fd35, {%r36, %r35};

BB5_48:
	setp.eq.f64	%p47, %fd2, 0d0000000000000000;
	setp.eq.f64	%p48, %fd1, 0d3FF0000000000000;
	or.pred  	%p49, %p48, %p47;
	selp.f64	%fd38, 0d3FF0000000000000, %fd35, %p49;

BB5_52:
	cvta.to.global.u64 	%rd12, %rd4;
	mul.wide.s32 	%rd13, %r3, 8;
	add.s64 	%rd14, %rd12, %rd13;
	st.global.f64 	[%rd14], %fd38;

BB5_53:
	ret;
}

	// .globl	binCellScalarOp
.visible .entry binCellScalarOp(
	.param .u64 binCellScalarOp_param_0,
	.param .f64 binCellScalarOp_param_1,
	.param .u64 binCellScalarOp_param_2,
	.param .u32 binCellScalarOp_param_3,
	.param .u32 binCellScalarOp_param_4,
	.param .u32 binCellScalarOp_param_5,
	.param .u32 binCellScalarOp_param_6
)
{
	.reg .pred 	%p<85>;
	.reg .b32 	%r<61>;
	.reg .f64 	%fd<75>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd4, [binCellScalarOp_param_0];
	ld.param.f64 	%fd54, [binCellScalarOp_param_1];
	ld.param.u64 	%rd5, [binCellScalarOp_param_2];
	ld.param.u32 	%r8, [binCellScalarOp_param_3];
	ld.param.u32 	%r9, [binCellScalarOp_param_4];
	ld.param.u32 	%r6, [binCellScalarOp_param_5];
	ld.param.u32 	%r7, [binCellScalarOp_param_6];
	mov.u32 	%r10, %ctaid.x;
	mov.u32 	%r11, %ntid.x;
	mov.u32 	%r12, %tid.x;
	mad.lo.s32 	%r13, %r11, %r10, %r12;
	mov.u32 	%r14, %ntid.y;
	mov.u32 	%r15, %ctaid.y;
	mov.u32 	%r16, %tid.y;
	mad.lo.s32 	%r17, %r13, %r9, %r16;
	mad.lo.s32 	%r1, %r14, %r15, %r17;
	mul.lo.s32 	%r18, %r9, %r8;
	setp.ge.s32	%p3, %r1, %r18;
	@%p3 bra 	BB6_88;

	cvta.to.global.u64 	%rd6, %rd5;
	cvta.to.global.u64 	%rd7, %rd4;
	mul.wide.s32 	%rd8, %r1, 8;
	add.s64 	%rd9, %rd7, %rd8;
	ld.global.f64 	%fd1, [%rd9];
	add.s64 	%rd1, %rd6, %rd8;
	setp.eq.s32	%p4, %r7, 0;
	@%p4 bra 	BB6_45;

	setp.eq.s32	%p5, %r6, 0;
	@%p5 bra 	BB6_43;

	mov.f64 	%fd66, 0dC08F380000000000;
	setp.gt.s32	%p6, %r6, 6;
	@%p6 bra 	BB6_13;

	setp.gt.s32	%p14, %r6, 3;
	@%p14 bra 	BB6_9;

	setp.eq.s32	%p18, %r6, 1;
	@%p18 bra 	BB6_42;

	setp.eq.s32	%p19, %r6, 2;
	@%p19 bra 	BB6_41;
	bra.uni 	BB6_7;

BB6_41:
	mul.f64 	%fd66, %fd1, %fd54;
	bra.uni 	BB6_44;

BB6_45:
	setp.eq.s32	%p45, %r6, 0;
	@%p45 bra 	BB6_86;

	mov.f64 	%fd74, 0dC08F380000000000;
	setp.gt.s32	%p46, %r6, 6;
	@%p46 bra 	BB6_56;

	setp.gt.s32	%p54, %r6, 3;
	@%p54 bra 	BB6_52;

	setp.eq.s32	%p58, %r6, 1;
	@%p58 bra 	BB6_85;

	setp.eq.s32	%p59, %r6, 2;
	@%p59 bra 	BB6_84;
	bra.uni 	BB6_50;

BB6_84:
	mul.f64 	%fd74, %fd1, %fd54;
	bra.uni 	BB6_87;

BB6_43:
	add.f64 	%fd66, %fd1, %fd54;

BB6_44:
	st.global.f64 	[%rd1], %fd66;
	bra.uni 	BB6_88;

BB6_13:
	setp.gt.s32	%p7, %r6, 9;
	@%p7 bra 	BB6_18;

	setp.eq.s32	%p11, %r6, 7;
	@%p11 bra 	BB6_25;

	setp.eq.s32	%p12, %r6, 8;
	@%p12 bra 	BB6_24;
	bra.uni 	BB6_16;

BB6_24:
	setp.le.f64	%p23, %fd1, %fd54;
	selp.f64	%fd66, 0d3FF0000000000000, 0d0000000000000000, %p23;
	bra.uni 	BB6_44;

BB6_86:
	add.f64 	%fd74, %fd1, %fd54;

BB6_87:
	st.global.f64 	[%rd1], %fd74;

BB6_88:
	ret;

BB6_56:
	setp.gt.s32	%p47, %r6, 9;
	@%p47 bra 	BB6_61;

	setp.eq.s32	%p51, %r6, 7;
	@%p51 bra 	BB6_68;

	setp.eq.s32	%p52, %r6, 8;
	@%p52 bra 	BB6_67;
	bra.uni 	BB6_59;

BB6_67:
	setp.ge.f64	%p63, %fd1, %fd54;
	selp.f64	%fd74, 0d3FF0000000000000, 0d0000000000000000, %p63;
	bra.uni 	BB6_87;

BB6_9:
	setp.eq.s32	%p15, %r6, 4;
	@%p15 bra 	BB6_27;

	setp.eq.s32	%p16, %r6, 5;
	@%p16 bra 	BB6_26;
	bra.uni 	BB6_11;

BB6_26:
	setp.gt.f64	%p26, %fd1, %fd54;
	selp.f64	%fd66, 0d3FF0000000000000, 0d0000000000000000, %p26;
	bra.uni 	BB6_44;

BB6_18:
	setp.eq.s32	%p8, %r6, 10;
	@%p8 bra 	BB6_23;

	setp.eq.s32	%p9, %r6, 11;
	@%p9 bra 	BB6_22;
	bra.uni 	BB6_20;

BB6_22:
	min.f64 	%fd66, %fd54, %fd1;
	bra.uni 	BB6_44;

BB6_52:
	setp.eq.s32	%p55, %r6, 4;
	@%p55 bra 	BB6_70;

	setp.eq.s32	%p56, %r6, 5;
	@%p56 bra 	BB6_69;
	bra.uni 	BB6_54;

BB6_69:
	setp.lt.f64	%p66, %fd1, %fd54;
	selp.f64	%fd74, 0d3FF0000000000000, 0d0000000000000000, %p66;
	bra.uni 	BB6_87;

BB6_61:
	setp.eq.s32	%p48, %r6, 10;
	@%p48 bra 	BB6_66;

	setp.eq.s32	%p49, %r6, 11;
	@%p49 bra 	BB6_65;
	bra.uni 	BB6_63;

BB6_65:
	min.f64 	%fd74, %fd1, %fd54;
	bra.uni 	BB6_87;

BB6_42:
	sub.f64 	%fd66, %fd54, %fd1;
	bra.uni 	BB6_44;

BB6_7:
	setp.eq.s32	%p20, %r6, 3;
	@%p20 bra 	BB6_8;
	bra.uni 	BB6_44;

BB6_8:
	div.rn.f64 	%fd66, %fd54, %fd1;
	bra.uni 	BB6_44;

BB6_25:
	setp.lt.f64	%p24, %fd1, %fd54;
	selp.f64	%fd66, 0d3FF0000000000000, 0d0000000000000000, %p24;
	bra.uni 	BB6_44;

BB6_16:
	setp.eq.s32	%p13, %r6, 9;
	@%p13 bra 	BB6_17;
	bra.uni 	BB6_44;

BB6_17:
	setp.eq.f64	%p22, %fd1, %fd54;
	selp.f64	%fd66, 0d3FF0000000000000, 0d0000000000000000, %p22;
	bra.uni 	BB6_44;

BB6_27:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r2}, %fd54;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r3}, %fd1;
	}
	bfe.u32 	%r19, %r3, 20, 11;
	add.s32 	%r20, %r19, -1012;
	mov.b64 	 %rd10, %fd1;
	shl.b64 	%rd2, %rd10, %r20;
	setp.eq.s64	%p27, %rd2, -9223372036854775808;
	abs.f64 	%fd10, %fd54;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd10;
	.param .b64 param1;
	st.param.f64	[param1+0], %fd1;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd65, [retval0+0];
	
	//{
	}// Callseq End 1
	setp.lt.s32	%p28, %r2, 0;
	and.pred  	%p1, %p28, %p27;
	@!%p1 bra 	BB6_29;
	bra.uni 	BB6_28;

BB6_28:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r21}, %fd65;
	}
	xor.b32  	%r22, %r21, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd65;
	}
	mov.b64 	%fd65, {%r23, %r22};

BB6_29:
	mov.f64 	%fd64, %fd65;
	setp.eq.f64	%p29, %fd54, 0d0000000000000000;
	@%p29 bra 	BB6_32;
	bra.uni 	BB6_30;

BB6_32:
	selp.b32	%r24, %r2, 0, %p27;
	or.b32  	%r25, %r24, 2146435072;
	setp.lt.s32	%p33, %r3, 0;
	selp.b32	%r26, %r25, %r24, %p33;
	mov.u32 	%r27, 0;
	mov.b64 	%fd64, {%r27, %r26};
	bra.uni 	BB6_33;

BB6_11:
	setp.eq.s32	%p17, %r6, 6;
	@%p17 bra 	BB6_12;
	bra.uni 	BB6_44;

BB6_12:
	setp.ge.f64	%p25, %fd1, %fd54;
	selp.f64	%fd66, 0d3FF0000000000000, 0d0000000000000000, %p25;
	bra.uni 	BB6_44;

BB6_23:
	setp.neu.f64	%p21, %fd1, %fd54;
	selp.f64	%fd66, 0d3FF0000000000000, 0d0000000000000000, %p21;
	bra.uni 	BB6_44;

BB6_20:
	setp.ne.s32	%p10, %r6, 12;
	@%p10 bra 	BB6_44;

	max.f64 	%fd66, %fd54, %fd1;
	bra.uni 	BB6_44;

BB6_85:
	sub.f64 	%fd74, %fd1, %fd54;
	bra.uni 	BB6_87;

BB6_50:
	setp.eq.s32	%p60, %r6, 3;
	@%p60 bra 	BB6_51;
	bra.uni 	BB6_87;

BB6_51:
	div.rn.f64 	%fd74, %fd1, %fd54;
	bra.uni 	BB6_87;

BB6_68:
	setp.gt.f64	%p64, %fd1, %fd54;
	selp.f64	%fd74, 0d3FF0000000000000, 0d0000000000000000, %p64;
	bra.uni 	BB6_87;

BB6_59:
	setp.eq.s32	%p53, %r6, 9;
	@%p53 bra 	BB6_60;
	bra.uni 	BB6_87;

BB6_60:
	setp.eq.f64	%p62, %fd1, %fd54;
	selp.f64	%fd74, 0d3FF0000000000000, 0d0000000000000000, %p62;
	bra.uni 	BB6_87;

BB6_70:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r4}, %fd1;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r5}, %fd54;
	}
	bfe.u32 	%r40, %r5, 20, 11;
	add.s32 	%r41, %r40, -1012;
	mov.b64 	 %rd11, %fd54;
	shl.b64 	%rd3, %rd11, %r41;
	setp.eq.s64	%p67, %rd3, -9223372036854775808;
	abs.f64 	%fd36, %fd1;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd36;
	.param .b64 param1;
	st.param.f64	[param1+0], %fd54;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_accurate_pow, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd73, [retval0+0];
	
	//{
	}// Callseq End 2
	setp.lt.s32	%p68, %r4, 0;
	and.pred  	%p2, %p68, %p67;
	@!%p2 bra 	BB6_72;
	bra.uni 	BB6_71;

BB6_71:
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r42}, %fd73;
	}
	xor.b32  	%r43, %r42, -2147483648;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r44, %temp}, %fd73;
	}
	mov.b64 	%fd73, {%r44, %r43};

BB6_72:
	mov.f64 	%fd72, %fd73;
	setp.eq.f64	%p69, %fd1, 0d0000000000000000;
	@%p69 bra 	BB6_75;
	bra.uni 	BB6_73;

BB6_75:
	selp.b32	%r45, %r4, 0, %p67;
	or.b32  	%r46, %r45, 2146435072;
	setp.lt.s32	%p73, %r5, 0;
	selp.b32	%r47, %r46, %r45, %p73;
	mov.u32 	%r48, 0;
	mov.b64 	%fd72, {%r48, %r47};
	bra.uni 	BB6_76;

BB6_54:
	setp.eq.s32	%p57, %r6, 6;
	@%p57 bra 	BB6_55;
	bra.uni 	BB6_87;

BB6_55:
	setp.le.f64	%p65, %fd1, %fd54;
	selp.f64	%fd74, 0d3FF0000000000000, 0d0000000000000000, %p65;
	bra.uni 	BB6_87;

BB6_66:
	setp.neu.f64	%p61, %fd1, %fd54;
	selp.f64	%fd74, 0d3FF0000000000000, 0d0000000000000000, %p61;
	bra.uni 	BB6_87;

BB6_63:
	setp.ne.s32	%p50, %r6, 12;
	@%p50 bra 	BB6_87;

	max.f64 	%fd74, %fd1, %fd54;
	bra.uni 	BB6_87;

BB6_30:
	setp.gt.s32	%p30, %r2, -1;
	@%p30 bra 	BB6_33;

	cvt.rzi.f64.f64	%fd56, %fd1;
	setp.neu.f64	%p31, %fd56, %fd1;
	selp.f64	%fd64, 0dFFF8000000000000, %fd64, %p31;

BB6_33:
	mov.f64 	%fd16, %fd64;
	add.f64 	%fd17, %fd1, %fd54;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd17;
	}
	and.b32  	%r29, %r28, 2146435072;
	setp.ne.s32	%p34, %r29, 2146435072;
	mov.f64 	%fd63, %fd16;
	@%p34 bra 	BB6_40;

	setp.gtu.f64	%p35, %fd10, 0d7FF0000000000000;
	mov.f64 	%fd63, %fd17;
	@%p35 bra 	BB6_40;

	abs.f64 	%fd18, %fd1;
	setp.gtu.f64	%p36, %fd18, 0d7FF0000000000000;
	mov.f64 	%fd62, %fd17;
	mov.f64 	%fd63, %fd62;
	@%p36 bra 	BB6_40;

	setp.eq.f64	%p37, %fd18, 0d7FF0000000000000;
	@%p37 bra 	BB6_39;
	bra.uni 	BB6_37;

BB6_39:
	setp.gt.f64	%p39, %fd10, 0d3FF0000000000000;
	selp.b32	%r35, 2146435072, 0, %p39;
	xor.b32  	%r36, %r35, 2146435072;
	setp.lt.s32	%p40, %r3, 0;
	selp.b32	%r37, %r36, %r35, %p40;
	setp.eq.f64	%p41, %fd54, 0dBFF0000000000000;
	selp.b32	%r38, 1072693248, %r37, %p41;
	mov.u32 	%r39, 0;
	mov.b64 	%fd63, {%r39, %r38};
	bra.uni 	BB6_40;

BB6_73:
	setp.gt.s32	%p70, %r4, -1;
	@%p70 bra 	BB6_76;

	cvt.rzi.f64.f64	%fd58, %fd54;
	setp.neu.f64	%p71, %fd58, %fd54;
	selp.f64	%fd72, 0dFFF8000000000000, %fd72, %p71;

BB6_76:
	mov.f64 	%fd42, %fd72;
	add.f64 	%fd43, %fd1, %fd54;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r49}, %fd43;
	}
	and.b32  	%r50, %r49, 2146435072;
	setp.ne.s32	%p74, %r50, 2146435072;
	mov.f64 	%fd71, %fd42;
	@%p74 bra 	BB6_83;

	setp.gtu.f64	%p75, %fd36, 0d7FF0000000000000;
	mov.f64 	%fd71, %fd43;
	@%p75 bra 	BB6_83;

	abs.f64 	%fd44, %fd54;
	setp.gtu.f64	%p76, %fd44, 0d7FF0000000000000;
	mov.f64 	%fd70, %fd43;
	mov.f64 	%fd71, %fd70;
	@%p76 bra 	BB6_83;

	setp.eq.f64	%p77, %fd44, 0d7FF0000000000000;
	@%p77 bra 	BB6_82;
	bra.uni 	BB6_80;

BB6_82:
	setp.gt.f64	%p79, %fd36, 0d3FF0000000000000;
	selp.b32	%r56, 2146435072, 0, %p79;
	xor.b32  	%r57, %r56, 2146435072;
	setp.lt.s32	%p80, %r5, 0;
	selp.b32	%r58, %r57, %r56, %p80;
	setp.eq.f64	%p81, %fd1, 0dBFF0000000000000;
	selp.b32	%r59, 1072693248, %r58, %p81;
	mov.u32 	%r60, 0;
	mov.b64 	%fd71, {%r60, %r59};
	bra.uni 	BB6_83;

BB6_37:
	setp.neu.f64	%p38, %fd10, 0d7FF0000000000000;
	mov.f64 	%fd63, %fd16;
	@%p38 bra 	BB6_40;

	shr.s32 	%r30, %r3, 31;
	and.b32  	%r31, %r30, -2146435072;
	selp.b32	%r32, -1048576, 2146435072, %p1;
	add.s32 	%r33, %r32, %r31;
	mov.u32 	%r34, 0;
	mov.b64 	%fd63, {%r34, %r33};

BB6_40:
	setp.eq.f64	%p42, %fd1, 0d0000000000000000;
	setp.eq.f64	%p43, %fd54, 0d3FF0000000000000;
	or.pred  	%p44, %p43, %p42;
	selp.f64	%fd66, 0d3FF0000000000000, %fd63, %p44;
	bra.uni 	BB6_44;

BB6_80:
	setp.neu.f64	%p78, %fd36, 0d7FF0000000000000;
	mov.f64 	%fd71, %fd42;
	@%p78 bra 	BB6_83;

	shr.s32 	%r51, %r5, 31;
	and.b32  	%r52, %r51, -2146435072;
	selp.b32	%r53, -1048576, 2146435072, %p2;
	add.s32 	%r54, %r53, %r52;
	mov.u32 	%r55, 0;
	mov.b64 	%fd71, {%r55, %r54};

BB6_83:
	setp.eq.f64	%p82, %fd54, 0d0000000000000000;
	setp.eq.f64	%p83, %fd1, 0d3FF0000000000000;
	or.pred  	%p84, %p83, %p82;
	selp.f64	%fd74, 0d3FF0000000000000, %fd71, %p84;
	bra.uni 	BB6_87;
}

	// .globl	fill
.visible .entry fill(
	.param .u64 fill_param_0,
	.param .f64 fill_param_1,
	.param .u32 fill_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<5>;


	ld.param.u64 	%rd1, [fill_param_0];
	ld.param.f64 	%fd1, [fill_param_1];
	ld.param.u32 	%r2, [fill_param_2];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.s32	%p1, %r1, %r2;
	@%p1 bra 	BB7_2;

	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 8;
	add.s64 	%rd4, %rd2, %rd3;
	st.global.f64 	[%rd4], %fd1;

BB7_2:
	ret;
}

	// .globl	reduce
.visible .entry reduce(
	.param .u64 reduce_param_0,
	.param .u64 reduce_param_1,
	.param .u32 reduce_param_2
)
{
	.reg .pred 	%p<18>;
	.reg .b32 	%r<31>;
	.reg .f64 	%fd<70>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd2, [reduce_param_0];
	ld.param.u64 	%rd3, [reduce_param_1];
	ld.param.u32 	%r5, [reduce_param_2];
	mov.u32 	%r6, %tid.x;
	mov.u32 	%r7, %ctaid.x;
	shl.b32 	%r8, %r7, 1;
	mov.u32 	%r9, %ntid.x;
	mad.lo.s32 	%r30, %r8, %r9, %r6;
	mov.f64 	%fd67, 0d0000000000000000;
	mov.f64 	%fd68, %fd67;
	setp.ge.u32	%p1, %r30, %r5;
	@%p1 bra 	BB8_4;

BB8_1:
	mov.f64 	%fd1, %fd68;
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.u32 	%rd5, %r30, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f64 	%fd27, [%rd6];
	add.f64 	%fd69, %fd1, %fd27;
	add.s32 	%r3, %r30, %r9;
	setp.ge.u32	%p2, %r3, %r5;
	@%p2 bra 	BB8_3;

	mul.wide.u32 	%rd8, %r3, 8;
	add.s64 	%rd9, %rd4, %rd8;
	ld.global.f64 	%fd28, [%rd9];
	add.f64 	%fd69, %fd69, %fd28;

BB8_3:
	mov.f64 	%fd68, %fd69;
	shl.b32 	%r12, %r9, 1;
	mov.u32 	%r13, %nctaid.x;
	mad.lo.s32 	%r30, %r12, %r13, %r30;
	setp.lt.u32	%p3, %r30, %r5;
	mov.f64 	%fd67, %fd68;
	@%p3 bra 	BB8_1;

BB8_4:
	mov.f64 	%fd65, %fd67;
	mul.wide.u32 	%rd10, %r6, 8;
	mov.u64 	%rd11, sdata;
	add.s64 	%rd1, %rd11, %rd10;
	st.shared.f64 	[%rd1], %fd65;
	bar.sync 	0;
	setp.lt.u32	%p4, %r9, 512;
	@%p4 bra 	BB8_8;

	setp.gt.u32	%p5, %r6, 255;
	mov.f64 	%fd66, %fd65;
	@%p5 bra 	BB8_7;

	ld.shared.f64 	%fd29, [%rd1+2048];
	add.f64 	%fd66, %fd65, %fd29;
	st.shared.f64 	[%rd1], %fd66;

BB8_7:
	mov.f64 	%fd65, %fd66;
	bar.sync 	0;

BB8_8:
	mov.f64 	%fd63, %fd65;
	setp.lt.u32	%p6, %r9, 256;
	@%p6 bra 	BB8_12;

	setp.gt.u32	%p7, %r6, 127;
	mov.f64 	%fd64, %fd63;
	@%p7 bra 	BB8_11;

	ld.shared.f64 	%fd30, [%rd1+1024];
	add.f64 	%fd64, %fd63, %fd30;
	st.shared.f64 	[%rd1], %fd64;

BB8_11:
	mov.f64 	%fd63, %fd64;
	bar.sync 	0;

BB8_12:
	mov.f64 	%fd61, %fd63;
	setp.lt.u32	%p8, %r9, 128;
	@%p8 bra 	BB8_16;

	setp.gt.u32	%p9, %r6, 63;
	mov.f64 	%fd62, %fd61;
	@%p9 bra 	BB8_15;

	ld.shared.f64 	%fd31, [%rd1+512];
	add.f64 	%fd62, %fd61, %fd31;
	st.shared.f64 	[%rd1], %fd62;

BB8_15:
	mov.f64 	%fd61, %fd62;
	bar.sync 	0;

BB8_16:
	mov.f64 	%fd60, %fd61;
	setp.gt.u32	%p10, %r6, 31;
	@%p10 bra 	BB8_29;

	setp.lt.u32	%p11, %r9, 64;
	@%p11 bra 	BB8_19;

	ld.volatile.shared.f64 	%fd32, [%rd1+256];
	add.f64 	%fd60, %fd60, %fd32;
	st.volatile.shared.f64 	[%rd1], %fd60;

BB8_19:
	mov.f64 	%fd59, %fd60;
	setp.lt.u32	%p12, %r9, 32;
	@%p12 bra 	BB8_21;

	ld.volatile.shared.f64 	%fd33, [%rd1+128];
	add.f64 	%fd59, %fd59, %fd33;
	st.volatile.shared.f64 	[%rd1], %fd59;

BB8_21:
	mov.f64 	%fd58, %fd59;
	setp.lt.u32	%p13, %r9, 16;
	@%p13 bra 	BB8_23;

	ld.volatile.shared.f64 	%fd34, [%rd1+64];
	add.f64 	%fd58, %fd58, %fd34;
	st.volatile.shared.f64 	[%rd1], %fd58;

BB8_23:
	mov.f64 	%fd57, %fd58;
	setp.lt.u32	%p14, %r9, 8;
	@%p14 bra 	BB8_25;

	ld.volatile.shared.f64 	%fd35, [%rd1+32];
	add.f64 	%fd57, %fd57, %fd35;
	st.volatile.shared.f64 	[%rd1], %fd57;

BB8_25:
	mov.f64 	%fd56, %fd57;
	setp.lt.u32	%p15, %r9, 4;
	@%p15 bra 	BB8_27;

	ld.volatile.shared.f64 	%fd36, [%rd1+16];
	add.f64 	%fd56, %fd56, %fd36;
	st.volatile.shared.f64 	[%rd1], %fd56;

BB8_27:
	setp.lt.u32	%p16, %r9, 2;
	@%p16 bra 	BB8_29;

	ld.volatile.shared.f64 	%fd37, [%rd1+8];
	add.f64 	%fd38, %fd56, %fd37;
	st.volatile.shared.f64 	[%rd1], %fd38;

BB8_29:
	setp.ne.s32	%p17, %r6, 0;
	@%p17 bra 	BB8_31;

	ld.shared.f64 	%fd39, [sdata];
	cvta.to.global.u64 	%rd12, %rd3;
	mul.wide.u32 	%rd13, %r7, 8;
	add.s64 	%rd14, %rd12, %rd13;
	st.global.f64 	[%rd14], %fd39;

BB8_31:
	ret;
}

.func  (.param .b64 func_retval0) __internal_accurate_pow(
	.param .b64 __internal_accurate_pow_param_0,
	.param .b64 __internal_accurate_pow_param_1
)
{
	.reg .pred 	%p<8>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<49>;
	.reg .f64 	%fd<135>;


	ld.param.f64 	%fd12, [__internal_accurate_pow_param_0];
	ld.param.f64 	%fd13, [__internal_accurate_pow_param_1];
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r46}, %fd12;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r45, %temp}, %fd12;
	}
	shr.u32 	%r47, %r46, 20;
	setp.ne.s32	%p1, %r47, 0;
	@%p1 bra 	BB9_2;

	mul.f64 	%fd14, %fd12, 0d4350000000000000;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r46}, %fd14;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%r45, %temp}, %fd14;
	}
	shr.u32 	%r16, %r46, 20;
	add.s32 	%r47, %r16, -54;

BB9_2:
	add.s32 	%r48, %r47, -1023;
	and.b32  	%r17, %r46, -2146435073;
	or.b32  	%r18, %r17, 1072693248;
	mov.b64 	%fd133, {%r45, %r18};
	setp.lt.u32	%p2, %r18, 1073127583;
	@%p2 bra 	BB9_4;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r19, %temp}, %fd133;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r20}, %fd133;
	}
	add.s32 	%r21, %r20, -1048576;
	mov.b64 	%fd133, {%r19, %r21};
	add.s32 	%r48, %r47, -1022;

BB9_4:
	add.f64 	%fd16, %fd133, 0d3FF0000000000000;
	// inline asm
	rcp.approx.ftz.f64 %fd15,%fd16;
	// inline asm
	neg.f64 	%fd17, %fd16;
	mov.f64 	%fd18, 0d3FF0000000000000;
	fma.rn.f64 	%fd19, %fd17, %fd15, %fd18;
	fma.rn.f64 	%fd20, %fd19, %fd19, %fd19;
	fma.rn.f64 	%fd21, %fd20, %fd15, %fd15;
	add.f64 	%fd22, %fd133, 0dBFF0000000000000;
	mul.f64 	%fd23, %fd22, %fd21;
	fma.rn.f64 	%fd24, %fd22, %fd21, %fd23;
	mul.f64 	%fd25, %fd24, %fd24;
	mov.f64 	%fd26, 0d3ED0F5D241AD3B5A;
	mov.f64 	%fd27, 0d3EB0F5FF7D2CAFE2;
	fma.rn.f64 	%fd28, %fd27, %fd25, %fd26;
	mov.f64 	%fd29, 0d3EF3B20A75488A3F;
	fma.rn.f64 	%fd30, %fd28, %fd25, %fd29;
	mov.f64 	%fd31, 0d3F1745CDE4FAECD5;
	fma.rn.f64 	%fd32, %fd30, %fd25, %fd31;
	mov.f64 	%fd33, 0d3F3C71C7258A578B;
	fma.rn.f64 	%fd34, %fd32, %fd25, %fd33;
	mov.f64 	%fd35, 0d3F6249249242B910;
	fma.rn.f64 	%fd36, %fd34, %fd25, %fd35;
	mov.f64 	%fd37, 0d3F89999999999DFB;
	fma.rn.f64 	%fd38, %fd36, %fd25, %fd37;
	sub.f64 	%fd39, %fd22, %fd24;
	add.f64 	%fd40, %fd39, %fd39;
	neg.f64 	%fd41, %fd24;
	fma.rn.f64 	%fd42, %fd41, %fd22, %fd40;
	mul.f64 	%fd43, %fd21, %fd42;
	fma.rn.f64 	%fd44, %fd25, %fd38, 0d3FB5555555555555;
	mov.f64 	%fd45, 0d3FB5555555555555;
	sub.f64 	%fd46, %fd45, %fd44;
	fma.rn.f64 	%fd47, %fd25, %fd38, %fd46;
	add.f64 	%fd48, %fd47, 0d0000000000000000;
	add.f64 	%fd49, %fd48, 0dBC46A4CB00B9E7B0;
	add.f64 	%fd50, %fd44, %fd49;
	sub.f64 	%fd51, %fd44, %fd50;
	add.f64 	%fd52, %fd49, %fd51;
	mul.rn.f64 	%fd53, %fd24, %fd24;
	neg.f64 	%fd54, %fd53;
	fma.rn.f64 	%fd55, %fd24, %fd24, %fd54;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r22, %temp}, %fd43;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r23}, %fd43;
	}
	add.s32 	%r24, %r23, 1048576;
	mov.b64 	%fd56, {%r22, %r24};
	fma.rn.f64 	%fd57, %fd24, %fd56, %fd55;
	mul.rn.f64 	%fd58, %fd53, %fd24;
	neg.f64 	%fd59, %fd58;
	fma.rn.f64 	%fd60, %fd53, %fd24, %fd59;
	fma.rn.f64 	%fd61, %fd53, %fd43, %fd60;
	fma.rn.f64 	%fd62, %fd57, %fd24, %fd61;
	mul.rn.f64 	%fd63, %fd50, %fd58;
	neg.f64 	%fd64, %fd63;
	fma.rn.f64 	%fd65, %fd50, %fd58, %fd64;
	fma.rn.f64 	%fd66, %fd50, %fd62, %fd65;
	fma.rn.f64 	%fd67, %fd52, %fd58, %fd66;
	add.f64 	%fd68, %fd63, %fd67;
	sub.f64 	%fd69, %fd63, %fd68;
	add.f64 	%fd70, %fd67, %fd69;
	add.f64 	%fd71, %fd24, %fd68;
	sub.f64 	%fd72, %fd24, %fd71;
	add.f64 	%fd73, %fd68, %fd72;
	add.f64 	%fd74, %fd70, %fd73;
	add.f64 	%fd75, %fd43, %fd74;
	add.f64 	%fd76, %fd71, %fd75;
	sub.f64 	%fd77, %fd71, %fd76;
	add.f64 	%fd78, %fd75, %fd77;
	xor.b32  	%r25, %r48, -2147483648;
	mov.u32 	%r26, 1127219200;
	mov.b64 	%fd79, {%r25, %r26};
	mov.u32 	%r27, -2147483648;
	mov.b64 	%fd80, {%r27, %r26};
	sub.f64 	%fd81, %fd79, %fd80;
	mov.f64 	%fd82, 0d3FE62E42FEFA39EF;
	fma.rn.f64 	%fd83, %fd81, %fd82, %fd76;
	neg.f64 	%fd84, %fd81;
	fma.rn.f64 	%fd85, %fd84, %fd82, %fd83;
	sub.f64 	%fd86, %fd85, %fd76;
	sub.f64 	%fd87, %fd78, %fd86;
	mov.f64 	%fd88, 0d3C7ABC9E3B39803F;
	fma.rn.f64 	%fd89, %fd81, %fd88, %fd87;
	add.f64 	%fd90, %fd83, %fd89;
	sub.f64 	%fd91, %fd83, %fd90;
	add.f64 	%fd92, %fd89, %fd91;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r28}, %fd13;
	}
	add.s32 	%r29, %r28, %r28;
	setp.gt.u32	%p3, %r29, -33554433;
	and.b32  	%r30, %r28, -15728641;
	selp.b32	%r31, %r30, %r28, %p3;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r32, %temp}, %fd13;
	}
	mov.b64 	%fd93, {%r32, %r31};
	mul.rn.f64 	%fd94, %fd90, %fd93;
	neg.f64 	%fd95, %fd94;
	fma.rn.f64 	%fd96, %fd90, %fd93, %fd95;
	fma.rn.f64 	%fd97, %fd92, %fd93, %fd96;
	add.f64 	%fd4, %fd94, %fd97;
	sub.f64 	%fd98, %fd94, %fd4;
	add.f64 	%fd5, %fd97, %fd98;
	mov.f64 	%fd99, 0d4338000000000000;
	mov.f64 	%fd100, 0d3FF71547652B82FE;
	fma.rn.f64 	%fd101, %fd4, %fd100, %fd99;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r13, %temp}, %fd101;
	}
	mov.f64 	%fd102, 0dC338000000000000;
	add.rn.f64 	%fd103, %fd101, %fd102;
	mov.f64 	%fd104, 0dBFE62E42FEFA39EF;
	fma.rn.f64 	%fd105, %fd103, %fd104, %fd4;
	mov.f64 	%fd106, 0dBC7ABC9E3B39803F;
	fma.rn.f64 	%fd107, %fd103, %fd106, %fd105;
	mov.f64 	%fd108, 0d3E928AF3FCA213EA;
	mov.f64 	%fd109, 0d3E5ADE1569CE2BDF;
	fma.rn.f64 	%fd110, %fd109, %fd107, %fd108;
	mov.f64 	%fd111, 0d3EC71DEE62401315;
	fma.rn.f64 	%fd112, %fd110, %fd107, %fd111;
	mov.f64 	%fd113, 0d3EFA01997C89EB71;
	fma.rn.f64 	%fd114, %fd112, %fd107, %fd113;
	mov.f64 	%fd115, 0d3F2A01A014761F65;
	fma.rn.f64 	%fd116, %fd114, %fd107, %fd115;
	mov.f64 	%fd117, 0d3F56C16C1852B7AF;
	fma.rn.f64 	%fd118, %fd116, %fd107, %fd117;
	mov.f64 	%fd119, 0d3F81111111122322;
	fma.rn.f64 	%fd120, %fd118, %fd107, %fd119;
	mov.f64 	%fd121, 0d3FA55555555502A1;
	fma.rn.f64 	%fd122, %fd120, %fd107, %fd121;
	mov.f64 	%fd123, 0d3FC5555555555511;
	fma.rn.f64 	%fd124, %fd122, %fd107, %fd123;
	mov.f64 	%fd125, 0d3FE000000000000B;
	fma.rn.f64 	%fd126, %fd124, %fd107, %fd125;
	fma.rn.f64 	%fd127, %fd126, %fd107, %fd18;
	fma.rn.f64 	%fd128, %fd127, %fd107, %fd18;
	{
	.reg .b32 %temp; 
	mov.b64 	{%r14, %temp}, %fd128;
	}
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r15}, %fd128;
	}
	shl.b32 	%r33, %r13, 20;
	add.s32 	%r34, %r15, %r33;
	mov.b64 	%fd134, {%r14, %r34};
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r35}, %fd4;
	}
	mov.b32 	 %f2, %r35;
	abs.f32 	%f1, %f2;
	setp.lt.f32	%p4, %f1, 0f4086232B;
	@%p4 bra 	BB9_7;

	setp.lt.f64	%p5, %fd4, 0d0000000000000000;
	add.f64 	%fd129, %fd4, 0d7FF0000000000000;
	selp.f64	%fd134, 0d0000000000000000, %fd129, %p5;
	setp.geu.f32	%p6, %f1, 0f40874800;
	@%p6 bra 	BB9_7;

	shr.u32 	%r36, %r13, 31;
	add.s32 	%r37, %r13, %r36;
	shr.s32 	%r38, %r37, 1;
	shl.b32 	%r39, %r38, 20;
	add.s32 	%r40, %r39, %r15;
	mov.b64 	%fd130, {%r14, %r40};
	sub.s32 	%r41, %r13, %r38;
	shl.b32 	%r42, %r41, 20;
	add.s32 	%r43, %r42, 1072693248;
	mov.u32 	%r44, 0;
	mov.b64 	%fd131, {%r44, %r43};
	mul.f64 	%fd134, %fd130, %fd131;

BB9_7:
	abs.f64 	%fd132, %fd134;
	setp.eq.f64	%p7, %fd132, 0d7FF0000000000000;
	@%p7 bra 	BB9_9;

	fma.rn.f64 	%fd134, %fd134, %fd5, %fd134;

BB9_9:
	st.param.f64	[func_retval0+0], %fd134;
	ret;
}


