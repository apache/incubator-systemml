#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

#
# THIS SCRIPT COMPUTES THE RATING/SCORE FOR A GIVEN LIST OF PAIRS: (USER-ID, ITEM-ID) USING 2 FACTOR MATRICES L AND R
# WE ASSUME THAT ALL USERS HAVE RATED AT LEAST ONCE AND ALL ITEMS HAVE BEEN RATED AT LEAST ONCE.
# INPUT   PARAMETERS:
# ---------------------------------------------------------------------------------------------
# NAME    TYPE     DEFAULT  MEANING
# ---------------------------------------------------------------------------------------------
# X       String   ---      Location to read the input user-ids list
# Y	 	  String   ---	    Location to write the output of top-K prediction:
#							 - top-K item-ids will be stored at Y
#							 - the corresponding top-K ratings will be stored at Y+".ratings"
# L       String   ---      Location of factor matrix L: user-id x feature-id
# R       String   ---      Location of factor matrix R: feature-id x item-id
# V	  	  String   ---      Location of original matrix V: user-id x item-id
# K	  	  Int      5	    The number of top-K items
# fmt     String   "text"   The output format of the factor matrix user-id/item-id/score
# ---------------------------------------------------------------------------------------------
# OUTPUT:
# 1- A matrix containing the top-K item-ids with highest predicted ratings for the users specified in the input matrix X
# 2- A matrix containing the top-K predicted ratings for the users specified in the input matrix X
#
# HOW TO INVOKE THIS SCRIPT - EXAMPLE:
# hadoop jar system-ds.jar -f ALS-topk-predict.dml -nvargs X=INPUT_DIR/X L=INPUT_DIR/L R=INPUT_DIR/R V=INTPUT_DIR/V.mtx
#													Y=OUTPUT_DIR/Y K=5 fmt=csv


X = read($1)
L = read($2)
R = read($3)
V = read($4)
[V_top_indices, V_top_values] = ALS_topk_predict(X=X, L=L, R=R, V=V)
write(V_top_indices, $5)
write(V_top_values, $6)