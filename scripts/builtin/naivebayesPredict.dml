#-------------------------------------------------------------
#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
#-------------------------------------------------------------

m_naivebayesPredict = function(Matrix[Double] D, Matrix[Double] C, Double probabilities = 1, Boolean verbose = TRUE)
 return (Matrix[Double] YRaw,Matrix[Double] Y)
{
	numRows = nrow(D);
	[prior, conditionals] = naivebayes(D=D, C=C, laplace=probabilities, verbose=verbose);

	ones = matrix(1, rows=numRows, cols=1)
	D_w_ones = cbind(D, ones)
	model = cbind(conditionals, prior)
	YRaw = D_w_ones %*% t(log(model))

	if(min(C) < 1)
	  stop("Stopping due to invalid argument: Label vector (Y) must be recoded")

	Y = rowIndexMax(YRaw)
			
	if(verbose){
      num_classes = nrow(prior)
	  num_classes_ground_truth = max(C)

	  if(num_classes < num_classes_ground_truth)
	    num_classes = num_classes_ground_truth
	  confusion_mat = table(Y, C, num_classes, num_classes)
	  write(confusion_mat, verbose, format="csv")
	}
}

